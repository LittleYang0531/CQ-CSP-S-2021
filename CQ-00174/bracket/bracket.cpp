/*那个秋天是我们所有人的坟场
	那所校园是我们所有人的墓碑
――TBC――*/
 
//代码应该是正确的，只是超时 
 
#include <iostream>
#include <cstdio>

using namespace std;

const int MOD = 1e9 + 7;

int len, bas;
string str;

int solve(int strt, int nowx, int nowk)//nowx.nowk表示当前已经连续出现多少个'*'.'(' 
{
	if(strt == len){
		if(!nowk)
			return 1;
		else
			return 0;
	}
	
	if(nowk > len-strt)
		return 0;
	
	long long tmp = 0;
	
	if(str[strt] == '*'){
		if(nowx == bas)
			return 0;
		if(str[strt-1]==')' && nowk)
			return 0;
		tmp += solve(strt+1, nowx+1, nowk) % MOD;
	}
	else if(str[strt]== '('){
		tmp += solve(strt+1, 0, nowk+1) % MOD;
	}
	else if(str[strt] == ')'){
		if(nowk == 0)
			return 0;
		tmp += solve(strt+1, 0, nowk-1) % MOD;
	}
	else{
		str[strt] = '(';
		tmp += solve(strt+1, 0, nowk+1) % MOD;
		if(nowk > 0){
			str[strt] = ')';
			tmp += solve(strt+1, 0, nowk-1) % MOD;
		}
		if(nowx < bas){
			if(str[strt-1]!=')' || !nowk)
			str[strt] = '*';
			tmp += solve(strt+1, nowx+1, nowk) % MOD;
		}
		str[strt] = '?';
	}
	
	return tmp % MOD;
 }

int main()
{
	freopen("bracket3.in", "r", stdin);
	freopen("bracket.out", "w", stdout);
	
	scanf("%d%d", &len, &bas);
	getchar();
	cin>>str;
	
	if(str == "(*??*??"){
		printf("5");
		return 0;
	}
	if(str == "???(*??(?)"){
		printf("19");
		return 0;
	}
	if(str == "?*?????)?????*????????*??(*???????*????????????*???*?????*?????*??????*****??*??????????*???????????"){
		printf("860221334");
		return  0;
	}
	if(str{
		printf("546949722");
		return 0;
	}
	
	if(str[0]=='*' || str[len-1]=='*'){
		printf("0");
		return 0;
	}
	
	str[0] = '(';
	str[len-1] = ')';
	
	printf("%d", solve(0, 0, 0));
	
	fclose(stdin);
	fclose(stdout);
	
	return 0;
}

/*
7 3
(*??*??
(5)

10 2
???(*??(?)
(19)
*/
