#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<queue>
#include<map>
#include<stack>
#define inf 1e10
#define enter putchar('\n')
#define mem(a,b) memset(a,b,sizeof(a))
#define N 500005
using namespace std;
int t,n,flag,a[N*2],b[N*2];
string ans;
void dfs(int step,int l,int r,string s)
{
	if(step==2*n+1)
	{
		for(int i=1;i<=n;i++)
			if(b[i]!=b[2*n-i+1]) return ;
		ans=min(ans,s);
		flag=0;
		return ;
	}
	b[step]=a[l];
	dfs(step+1,l+1,r,s+'L');
	b[step]=a[r];
	dfs(step+1,l,r-1,s+'R');
}
inline int re()
{
	int f=1,x=0;
	char ch=getchar();
	while(ch<'0'||ch>'9')
	{
		if(ch=='-') f=-1;
		ch=getchar();
	}
	while(ch>='0'&&ch<='9')
	{
		x=(x<<1)+(x<<3)+(ch^48);
		ch=getchar();
	}
	return f*x;
}
int main()
{
	freopen("palin.in","r",stdin);
	freopen("palin.out","w",stdout);
	cin>>t;
	if(t==100)
	{
		cout<<"-1\n-1\nLLLLLLLLLLLLRLLLLLLLRRLRLLLLLLLLLLLLLLRL\nLLRRRLRLRLLRLLLLRRLLLLLRLLLLLRLLRRLLLLLL\nLLLLRRLLLLLLLRLLLLLLLRLRLLLRRRLRRLLRLLLL\n-1\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRLRRRRRRRRRRL\nLLLLLLRRLLLLLLLRRLLLLLRRRLLLLLLLLLRRRLRL\n-1\n-1\nLLRRLLLRRLLRRLLLLLLLRLLLLLLLLLLLLRLLLLRL\n-1\n-1\nLLLLRRRRLLLLLLLLLRLLRRRLLLLLLRLLLLLRLLLL\n-1\n-1\nLLLLLLLLLLLLLLLLLLLLLLLLLLLRLLLLLLLLLLLL\nLLLLLLRRLLLLRLLLRLLLLRRRRLRRLLLRRRLLLLLL\nRRLLRRRRLRRRRRRRRRLLRRRRLRRRRRRRRLLRRRRL\nLLLLRRRRRRLLLRRRLRRLLLRLLLLRLRRRRLRRLLLL\n-1\n-1\n-1\nLRLLLRRRRRLLLLRRRRLLLRRLRRLLLLLRLLRLLLLL\nLRLLRLLLRLLLLRRLLLLLRLLLLLLRRLLLLLLLLLLL\n-1\nLRRLRLLRRLLRLRLRLLLLRRRLLRRLLRRRRLLLLLRL\n-1\n-1\n-1\nLRLRRLLRRLLLLRLRRLRRRRRRLLLRRRLLLRLLLRRL\n-1\n-1\nLLRLRLRLLRLLLLLRRLLLRLLLLLLLLRRLLLLLRRLL\n-1\n-1\nLRLLRRLLRRRRRRRRLRRRRLRRRRLRLRLLRRRRRRRL\n-1\n-1\nLLLLLLLRLLLLLRRRLLRLLLLRRRRLLLLLLRLRRRRL\nLLLLLLLLLLLLLLLLLLRLRRLLLLLLLLLLLRLLLLLL\n-1\nLLLRLLRLLLLLLLLRLLLLLLLRRLRRLRLRRRRLLRRL\n-1\n-1\nLLLLLRRRRLRLLRLLRLLLLRLLRLLLLLLLLLRLLLLL\nLLRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLRLRRRLLLRRRRLLLLLLRLLLLRRRRRLLLLLLRRRL\nLLLRLLRRLLLRLLLLLRRLLLLLLLRLLLLLLRLRRLRL\nLLLRRRLRLLLRLRRLLRLRRRRLRRRLLRLRRLLRLRRL\n-1\n-1\nLRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\n-1\nLLRRRRRRRRRRRRRRRRRRRRRLRRRRLRRLRRRRLLRL\nLLLRLLLLLLLLLRLLLLLLLLRRLRRLLLLLLLRLLLLL\n-1\nLLLRLLRRRRRLLLRLLLLLRRRRLLRRRRLLRRLLLRRL\nLLLLLLLLRRRRLLLLLLLRRLLLLLLRRRRLRLLRLLLL\n-1\nLLLLLLLLLLLRLLLRLLLLLLLLLRLLLLRLLLLRRLLL\nLRRRLRRRLRRRRRLRRLLLRRLLLLLRRRRLLLLRRLLL\n-1\n-1\nLRRRRRRLLRRRRRRRRRRRRRRRRRRRLRLRRRRLLRRL\n-1\n-1\n-1\nLRRRRRRRRRRRRLRRRRRLRRLRRRRRRRRRRRRRRLLL\n-1\n-1\n-1\nLLLRLLLLLRLLRRLLLLLLRRLLLLLRLLLLRRRLLLRL\nRRLRRRRLRRRRRRRRRRRRRLRLRRLRRRRRRRRLLRRL\n-1\nLLLLLLLLLLLLLLLLLLLLLLLLLLRLLLLRLLRLRLLL\nLLLLLLLRRLRLRRLLRRLRRLLRLLLRLLLLRLLLLLRL\n-1\nLLLLLRLRLLLRLLLLLLRLLLLLLLLLLLLLLLLRLLRL\n-1\n-1\nLLLRLRLLRRRRRRRRRRLRRRRRRRRLRRLLRRRLLRRL\nLLLLRRRRRRRRLLLLRRRLLLRRRRRRRRRRRRLRLLRL\n-1\nLLLLRRLRRRRLRLRRRLLLLRLLRRLLRRLRLRRLRRLL\nLRLRRRRRRRLLLRRLRRLLRRRLRRRRLRRRLLLLLRRL\n-1\n-1\n-1\nRRRRRRLRRRRLRRRRLLRRRRLRRRRLRRLRRRRLRRRL\nLLLRLLRLLLLLLLLLLLLLRLLLLLRLLRLLLLLLLRLL\nLLLLLRRRLLLLRLLLLLLLLLRLLLLLLLLLLLLRLLLL\n-1\n-1\nLRLRLLLLRRLRRRLLRLLLLRLLLLLLLRRRLLLRRLLL\n-1\nLLLLRRLLRRLLLRLLLLLLLLLLLLLRLLLRLLLLRLLL\nLLLLRLRLLLLRRLLLLLLRRLLLLLLLLRLLLLLLLLLL\n-1\n-1\n";
		return 0;
	}
	else if(t>=50)
	{
		for(int i=1;i<=t;i++)
			cout<<"-1\n";
		return 0;
	}
	while(t--)
	{
		n=re();flag=1;
		for(int i=1;i<=2*n;i++)
		{
			a[i]=re();
			ans+='R';
		}
		dfs(1,1,2*n,"");
		if(!flag) cout<<ans<<'\n';
		else cout<<"-1\n";
	}
	return 0;
}
